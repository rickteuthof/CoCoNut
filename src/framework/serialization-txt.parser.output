Grammar

    0 $accept: root "End-of-file (EOF)"

    1 root: nodelist

    2 nodelist: node nodelist
    3         | node

    4 node: nodeheader '{' nodebody '}' optsemicolon
    5     | nodeheader ';'

    6 nodeheader: "identifier" "unsigned integer value"
    7           | "root" "identifier" "unsigned integer value"

    8 nodebody: children ',' attributes
    9         | attributes ',' children
   10         | children
   11         | attributes

   12 children: "children" '{' childlist '}'

   13 childlist: child ',' childlist
   14          | child

   15 child: "identifier" '=' "unsigned integer value"

   16 attributes: "attributes" '{' attributelist '}'

   17 attributelist: attribute ',' attributelist
   18              | attribute

   19 attribute: "identifier" '=' attributevalue

   20 attributevalue: "identifier"
   21               | "string value"
   22               | "integer value"
   23               | "unsigned integer value"
   24               | "float value"
   25               | "true"
   26               | "false"

   27 optsemicolon: ';'
   28             | %empty


Terminals, with rules where they appear

"End-of-file (EOF)" (0) 0
',' (44) 8 9 13 17
';' (59) 5 27
'=' (61) 15 19
'{' (123) 4 12 16
'}' (125) 4 12 16
error (256)
"integer value" <intval> (258) 22
"unsigned integer value" <uintval> (259) 6 7 15 23
"float value" <fval> (260) 24
"string value" <string> (261) 21
"identifier" <string> (262) 6 7 15 19 20
"true" (263) 25
"false" (264) 26
"root" (265) 7
"attributes" (266) 16
"children" (267) 12


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
root <file> (19)
    on left: 1, on right: 0
nodelist <array> (20)
    on left: 2 3, on right: 1 2
node <node> (21)
    on left: 4 5, on right: 2 3
nodeheader <nodeheader> (22)
    on left: 6 7, on right: 4 5
nodebody <node> (23)
    on left: 8 9 10 11, on right: 4
children <array> (24)
    on left: 12, on right: 8 9 10
childlist <array> (25)
    on left: 13 14, on right: 12 13
child <child> (26)
    on left: 15, on right: 13 14
attributes <array> (27)
    on left: 16, on right: 8 9 11
attributelist <array> (28)
    on left: 17 18, on right: 16 17
attribute <attribute> (29)
    on left: 19, on right: 17 18
attributevalue <attributevalue> (30)
    on left: 20 21 22 23 24 25 26, on right: 19
optsemicolon (31)
    on left: 27 28, on right: 4


State 0

    0 $accept: . root "End-of-file (EOF)"

    "identifier"  shift, and go to state 1
    "root"        shift, and go to state 2

    root        go to state 3
    nodelist    go to state 4
    node        go to state 5
    nodeheader  go to state 6


State 1

    6 nodeheader: "identifier" . "unsigned integer value"

    "unsigned integer value"  shift, and go to state 7


State 2

    7 nodeheader: "root" . "identifier" "unsigned integer value"

    "identifier"  shift, and go to state 8


State 3

    0 $accept: root . "End-of-file (EOF)"

    "End-of-file (EOF)"  shift, and go to state 9


State 4

    1 root: nodelist .

    $default  reduce using rule 1 (root)


State 5

    2 nodelist: node . nodelist
    3         | node .

    "identifier"  shift, and go to state 1
    "root"        shift, and go to state 2

    $default  reduce using rule 3 (nodelist)

    nodelist    go to state 10
    node        go to state 5
    nodeheader  go to state 6


State 6

    4 node: nodeheader . '{' nodebody '}' optsemicolon
    5     | nodeheader . ';'

    '{'  shift, and go to state 11
    ';'  shift, and go to state 12


State 7

    6 nodeheader: "identifier" "unsigned integer value" .

    $default  reduce using rule 6 (nodeheader)


State 8

    7 nodeheader: "root" "identifier" . "unsigned integer value"

    "unsigned integer value"  shift, and go to state 13


State 9

    0 $accept: root "End-of-file (EOF)" .

    $default  accept


State 10

    2 nodelist: node nodelist .

    $default  reduce using rule 2 (nodelist)


State 11

    4 node: nodeheader '{' . nodebody '}' optsemicolon

    "attributes"  shift, and go to state 14
    "children"    shift, and go to state 15

    nodebody    go to state 16
    children    go to state 17
    attributes  go to state 18


State 12

    5 node: nodeheader ';' .

    $default  reduce using rule 5 (node)


State 13

    7 nodeheader: "root" "identifier" "unsigned integer value" .

    $default  reduce using rule 7 (nodeheader)


State 14

   16 attributes: "attributes" . '{' attributelist '}'

    '{'  shift, and go to state 19


State 15

   12 children: "children" . '{' childlist '}'

    '{'  shift, and go to state 20


State 16

    4 node: nodeheader '{' nodebody . '}' optsemicolon

    '}'  shift, and go to state 21


State 17

    8 nodebody: children . ',' attributes
   10         | children .

    ','  shift, and go to state 22

    $default  reduce using rule 10 (nodebody)


State 18

    9 nodebody: attributes . ',' children
   11         | attributes .

    ','  shift, and go to state 23

    $default  reduce using rule 11 (nodebody)


State 19

   16 attributes: "attributes" '{' . attributelist '}'

    "identifier"  shift, and go to state 24

    attributelist  go to state 25
    attribute      go to state 26


State 20

   12 children: "children" '{' . childlist '}'

    "identifier"  shift, and go to state 27

    childlist  go to state 28
    child      go to state 29


State 21

    4 node: nodeheader '{' nodebody '}' . optsemicolon

    ';'  shift, and go to state 30

    $default  reduce using rule 28 (optsemicolon)

    optsemicolon  go to state 31


State 22

    8 nodebody: children ',' . attributes

    "attributes"  shift, and go to state 14

    attributes  go to state 32


State 23

    9 nodebody: attributes ',' . children

    "children"  shift, and go to state 15

    children  go to state 33


State 24

   19 attribute: "identifier" . '=' attributevalue

    '='  shift, and go to state 34


State 25

   16 attributes: "attributes" '{' attributelist . '}'

    '}'  shift, and go to state 35


State 26

   17 attributelist: attribute . ',' attributelist
   18              | attribute .

    ','  shift, and go to state 36

    $default  reduce using rule 18 (attributelist)


State 27

   15 child: "identifier" . '=' "unsigned integer value"

    '='  shift, and go to state 37


State 28

   12 children: "children" '{' childlist . '}'

    '}'  shift, and go to state 38


State 29

   13 childlist: child . ',' childlist
   14          | child .

    ','  shift, and go to state 39

    $default  reduce using rule 14 (childlist)


State 30

   27 optsemicolon: ';' .

    $default  reduce using rule 27 (optsemicolon)


State 31

    4 node: nodeheader '{' nodebody '}' optsemicolon .

    $default  reduce using rule 4 (node)


State 32

    8 nodebody: children ',' attributes .

    $default  reduce using rule 8 (nodebody)


State 33

    9 nodebody: attributes ',' children .

    $default  reduce using rule 9 (nodebody)


State 34

   19 attribute: "identifier" '=' . attributevalue

    "integer value"           shift, and go to state 40
    "unsigned integer value"  shift, and go to state 41
    "float value"             shift, and go to state 42
    "string value"            shift, and go to state 43
    "identifier"              shift, and go to state 44
    "true"                    shift, and go to state 45
    "false"                   shift, and go to state 46

    attributevalue  go to state 47


State 35

   16 attributes: "attributes" '{' attributelist '}' .

    $default  reduce using rule 16 (attributes)


State 36

   17 attributelist: attribute ',' . attributelist

    "identifier"  shift, and go to state 24

    attributelist  go to state 48
    attribute      go to state 26


State 37

   15 child: "identifier" '=' . "unsigned integer value"

    "unsigned integer value"  shift, and go to state 49


State 38

   12 children: "children" '{' childlist '}' .

    $default  reduce using rule 12 (children)


State 39

   13 childlist: child ',' . childlist

    "identifier"  shift, and go to state 27

    childlist  go to state 50
    child      go to state 29


State 40

   22 attributevalue: "integer value" .

    $default  reduce using rule 22 (attributevalue)


State 41

   23 attributevalue: "unsigned integer value" .

    $default  reduce using rule 23 (attributevalue)


State 42

   24 attributevalue: "float value" .

    $default  reduce using rule 24 (attributevalue)


State 43

   21 attributevalue: "string value" .

    $default  reduce using rule 21 (attributevalue)


State 44

   20 attributevalue: "identifier" .

    $default  reduce using rule 20 (attributevalue)


State 45

   25 attributevalue: "true" .

    $default  reduce using rule 25 (attributevalue)


State 46

   26 attributevalue: "false" .

    $default  reduce using rule 26 (attributevalue)


State 47

   19 attribute: "identifier" '=' attributevalue .

    $default  reduce using rule 19 (attribute)


State 48

   17 attributelist: attribute ',' attributelist .

    $default  reduce using rule 17 (attributelist)


State 49

   15 child: "identifier" '=' "unsigned integer value" .

    $default  reduce using rule 15 (child)


State 50

   13 childlist: child ',' childlist .

    $default  reduce using rule 13 (childlist)
